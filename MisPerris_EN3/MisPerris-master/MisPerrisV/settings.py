"""
Django settings for MisPerrisV project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'Sistema/static/js', 'serviceworker.js')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'r_fo2(w$p8_#^nc$emg(!eb$k!jgo$=co-9iqv4%@)o^li712p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Sistema.apps.SistemaConfig',
    #Agregamos esto para poder trabajar sin conexion
    'pwa',
    #Agregamos esto para la api externa de facebook
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    #agregamos esta para el social login
    # Agregamos para el login social
    'social_django',  
    'django.contrib.sites',
    'rest_framework',
]

#para las variables locales
LOCAL_APPS =(
'posts',
'users',
)
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Agregamos esta linea para el social login
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'MisPerrisV.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',  # <-- Agrergamos para el social login y su interaccion con los backends
                'social_django.context_processors.login_redirect', # <-- Agregamos para el social login y su redireccion
            ],
        },
    },
]

WSGI_APPLICATION = 'MisPerrisV.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'misperris',
        'HOST':'127.0.0.1',
        'PORT': 3306,
        'USER':'root',
        'PASSWORD':'',
    }
}

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
    'social_core.backends.github.GithubOAuth2',# Agregamos para el social login de github
)


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SOCIAL_AUTH_FACEBOOK_KEY = 'key'
SOCIAL_AUTH_FACEBOOK_SECRET = 'key'

SOCIAL_AUTH_GITHUB_KEY = '2c388dcfe9b189aa69e2'
SOCIAL_AUTH_GITHUB_SECRET = '13f499dd0311330f9a5b29dd91783e79522bb2d4'

#dejamos seteadas variables de redireccion

LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
LOGIN_REDIRECT_URL = 'index'

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

#Rutas de las imagenes
MEDIA_URL = 'Sistema/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'Sistema/media/')

#Con estos datos podemos enviar un correo al usuario para recuperar la contraseña
EMAIL_HOST = 'smtp.gmail.com'  #Servidor GMAIL
EMAIL_USE_TLS = True
EMAIL_PORT = 587 #Puerto
EMAIL_HOST_USER = 'misperris999@gmail.com' #Correo REAL - Puede agregar el empresarial si esta asociado a una cuenta GMAIL
EMAIL_HOST_PASSWORD = 'misperris1' #Contraseña del correoo